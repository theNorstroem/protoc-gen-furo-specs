package template

import (
	"github.com/golang/protobuf/protoc-gen-go/descriptor"
	"github.com/theNorstroem/protoc-gen-furo-specs/pkg/protoast"
	"google.golang.org/protobuf/types/pluginpb"
)

type TemplateData struct {
	FileName        string
	PackageName     string
	Descriptor      *descriptor.FileDescriptorProto
	Type            *descriptor.DescriptorProto
	Location        *descriptor.SourceCodeInfo_Location
	SourceInfo      protoast.MessageInfo
	SourceProto     string
	CompilerVersion *pluginpb.Version
	Parameters      map[string]string
}

var Template = `// Code generated by protoc-gen-furo-specs. DO NOT EDIT.
// versions:
// 	protoc        v{{.CompilerVersion.Major}}.{{.CompilerVersion.Minor}}.{{.CompilerVersion.Patch}} {{.CompilerVersion.Suffix}}
// parameters:  {{.Parameters}}
// source: {{.SourceProto}}

package {{.PackageName}}
// patch the target fields according to the update_mask
// this is not a very elegant implementation, but fast
func (target *{{.Type.Name}}) PatchWithUpdateMask(delta *{{.Type.Name}}) {
	for _, field := range delta.UpdateMask.Paths {	
		{{range $f:= .SourceInfo.FieldInfos}}
		{{comment $f.Info.LeadingComments}}
        if field == "{{$f.Field.JsonName}}" {
			{{comment $f.Info.TrailingComments}}
			target.{{camel $f.Field.JsonName}} = delta.{{camel $f.Field.JsonName}}
		}
		{{end}}
	}
}
`
